name: Build and Push controller Docker Images

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
     matrix:
        arch:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: x86_64-unknown-linux-musl
          components: rustfmt, clippy, miri, rust-src

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-musl
          components: rustfmt, clippy

      - name: Set Build Arguments
        id: args
        run: |
          if [ "${{ matrix.arch }}" == "linux/arm64" ]; then
            echo "BUILD=aarch64-unknown-linux-gnu" >> $GITHUB_OUTPUT
          else
            echo "BUILD=x86_64-unknown-linux-gnu" >> $GITHUB_OUTPUT
          fi

      - name: Build Rust
        run: |
          sudo apt update -y
          
          sudo apt install linux-tools-common linux-tools-generic linux-tools-$(uname -r) -y

          cd controller

          cargo install cross --git https://github.com/cross-rs/cross
     
          cross build --target ${{ steps.args.outputs.BUILD }} --release

      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4
        with:
          name: ${{ steps.args.outputs.BUILD }}-binary
          path: controller/target/${{ steps.args.outputs.BUILD }}/release/kube-guardian


  push:  
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3
        with:
          install: true
          version: latest

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: x86_64-unknown-linux-gnu-binary
          path: controller/linux/amd64

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: aarch64-unknown-linux-gnu-binary
          path: controller/linux/arm64

      - name: Build and Push
        env:
          BUILDX_NO_DEFAULT_ATTESTATIONS: 1
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6
        with:
          context: controller/
          platforms: linux/amd64,linux/arm64,
          file: controller/Dockerfile
          push: true
          tags: |
            ghcr.io/xentra-ai/images/guardian-controller:edge
