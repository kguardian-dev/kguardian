name: Build and Push controller Docker Images

on:
  workflow_dispatch: {}
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
     matrix:
        arch:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: x86_64-unknown-linux-musl
          components: rustfmt, clippy, miri, rust-src

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-musl
          components: rustfmt, clippy

      - name: Set Build Arguments
        id: args
        run: |
          if [ "${{ matrix.arch }}" == "linux/arm64" ]; then
            echo "BUILD=aarch64-unknown-linux-gnu" >> $GITHUB_OUTPUT
          else
            echo "BUILD=x86_64-unknown-linux-gnu" >> $GITHUB_OUTPUT
          fi

      - name: Install bpf-linker
        run: |
          sudo apt update -y
          
          sudo apt install linux-tools-common linux-tools-generic linux-tools-$(uname -r) -y

          cd controller

          cargo install cross --git https://github.com/cross-rs/cross
     
          cross build --target ${{ steps.args.outputs.BUILD }} --release

      - uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4
        with:
          name: ${{ steps.args.outputs.BUILD }}-binary
          path: controller/target/${{ steps.args.outputs.BUILD }}/release/kube-guardian


  # push:  
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3
  #       with:
  #         platforms: all

  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3
  #       with:
  #         install: true
  #         version: latest

  #     - name: Login to GHCR
  #       uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4
  #       with:
  #         name: x86_64-unknown-linux-gnu-binary
  #         path: controller/linux/amd64

  #     - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4
  #       with:
  #         name: aarch64-unknown-linux-gnu-binary
  #         path: controller/linux/arm64

  #     - name: Build and Push
  #       env:
  #         BUILDX_NO_DEFAULT_ATTESTATIONS: 1
  #       if: github.ref == 'refs/heads/main'
  #       uses: docker/build-push-action@16ebe778df0e7752d2cfcbd924afdbbd89c1a755 # v6
  #       with:
  #         context: controller/
  #         platforms: linux/amd64, linux/arm64,
  #         file: controller/Dockerfile
  #         push: true
  #         tags: |
  #           ghcr.io/xentra-ai/images/guardian-controller:edge
